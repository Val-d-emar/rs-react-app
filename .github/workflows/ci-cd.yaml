# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

# –¢—Ä–∏–≥–≥–µ—Ä—ã: –∑–∞–ø—É—Å–∫–∞—Ç—å –≤–æ—Ä–∫—Ñ–ª–æ—É –ø—Ä–∏ push –∏–ª–∏ pull_request –≤ –≤–µ—Ç–∫—É 'main', 'dev'
on:
  push:
    branches: ['main', 'dev']
  pull_request:
    branches: ['main', 'dev']
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read # –ü—Ä–∞–≤–æ –Ω–∞ —á—Ç–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–¥–ª—è checkout)
  pull-requests: write # –ü—Ä–∞–≤–æ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ Pull Requests (–¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)

jobs:
  build-and-test:
    # –ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ Ubuntu
    runs-on: ubuntu-latest

    steps:
      # –®–∞–≥ 1: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      - name: Checkout repository
        uses: actions/checkout@v4

      # –®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      # –®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      - name: Install dependencies
        run: npm i
      # ... –ø–æ—Å–ª–µ —à–∞–≥–∞ "Install dependencies"

      # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–æ–º –∏ —Ñ–æ—Ä–º–∞—Ç–æ–º
      - name: Run linter and check format
        run: |
          npm run lint
          npm run format:check

      # –®–∞–≥ 5: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
      - name: Run tests
        run: npm run test -- --run # –§–ª–∞–≥ --run –¥–ª—è Vitest, —á—Ç–æ–±—ã –æ–Ω –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–æ–≤

      # –®–∞–≥ 5.1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏
      - name: Run tests and generate coverage summary
        id: coverage
        env:
          NO_COLOR: true # –û—Ç–∫–ª—é—á–∞–µ–º —Ü–≤–µ—Ç–Ω–æ–π –≤—ã–≤–æ–¥ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö
        # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Ñ–∞–π–ª
        run: npm run test:coverage -- --run | tee coverage-summary.txt
      # –®–∞–≥ 5.2: –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –≤ PR
      - name: Delete old coverage comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const botCommentIdentifier = "## üß™ Test Coverage Report";

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const oldComment = comments.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.startsWith(botCommentIdentifier)
            );

            if (oldComment) {
              console.log(`Found old comment with id: ${oldComment.id}. Deleting...`);
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: oldComment.id,
              });
              console.log('Old comment deleted.');
            } else {
              console.log('No old coverage comment found.');
            }
      # –®–∞–≥ 5.3: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤ PR
      - name: Post coverage summary to PR
        # –ó–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–±—ã—Ç–∏–π pull_request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          # –≠—Ç–æ—Ç —Ç–æ–∫–µ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è GitHub –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('coverage-summary.txt', 'utf8');

            const body = `## üß™ Test Coverage Report\n\n\`\`\`\n${summary}\n\`\`\``;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
      # 3. –®–∞–≥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª–Ω–æ–≥–æ HTML-–æ—Ç—á–µ—Ç–∞ –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
      - name: Upload full coverage report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-html
          path: coverage/
          retention-days: 7 # –•—Ä–∞–Ω–∏—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç 7 –¥–Ω–µ–π
      # –®–∞–≥ 6: –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
      - name: Build Docker image for testing
        if: github.ref == 'refs/heads/dev' && github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true # –ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ–±—Ä–∞–∑ –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π Docker, —á—Ç–æ–±—ã –µ–≥–æ –º–æ–∂–Ω–æ –±—ã–ª–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å
          tags: test-image:latest

      # –®–∞–≥ 7: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
      - name: Test running container
        if: github.ref == 'refs/heads/dev' && github.event_name != 'pull_request'
        run: |
          docker run -d --name test-container -p 8080:80 test-image:latest
          echo "Waiting for container to start..."
          sleep 10
          echo "Pinging the container..."
          curl --fail http://localhost:8080

      # –®–∞–≥ 8: –í—Ö–æ–¥ –≤ Docker Hub
      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/dev' && github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # –®–∞–≥ 9: –°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑–∞
      - name: Build and push to Docker Hub
        if: github.ref == 'refs/heads/dev' && github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rs-react-apps:latest # –ü—É–±–ª–∏–∫—É–µ–º –æ–±—Ä–∞–∑ –≤ Docker Hub

  # --- –ù–û–í–´–ô JOB –î–õ–Ø –ü–£–ë–õ–ò–ö–ê–¶–ò–ò –ù–ê GITHUB PAGES ---
  deploy:
    name: Deploy to GitHub Pages
    # –ó–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
    needs: build-and-test
    # –ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ Ubuntu
    runs-on: ubuntu-latest

    # –ó–∞–¥–∞–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è GITHUB_TOKEN, —á—Ç–æ–±—ã —Ä–∞–∑—Ä–µ—à–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é
    permissions:
      contents: read
      pages: write # –ü—Ä–∞–≤–æ –Ω–∞ –∑–∞–ø–∏—Å—å –Ω–∞ GitHub Pages
      id-token: write # –ü—Ä–∞–≤–æ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ OIDC —Ç–æ–∫–µ–Ω–∞
    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: 'pages'
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        # –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞—Å—Ç –ø–∞–ø–∫—É 'dist'
        run: npm run build -- --base=/${{ github.event.repository.name }}/

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload production build as artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏, —Å–æ–∑–¥–∞–Ω–Ω–æ–π –Ω–∞ —à–∞–≥–µ 'build'
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # –°–º–æ–∫-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω—É–∂–Ω—ã–π —Ç–µ–∫—Å—Ç
      - name: Verify deployment
        run: |
          echo "Verifying deployment at: ${{ steps.deployment.outputs.page_url }}"
          # –î–∞–µ–º GitHub Pages –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ "—Ä–∞–∑–æ–≥—Ä–µ–≤"
          sleep 10
          # –ò—Å–ø–æ–ª—å–∑—É–µ–º curl –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ grep –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ–∫—Å—Ç–∞.
          # –§–ª–∞–≥ --fail –∑–∞—Å—Ç–∞–≤–∏—Ç curl —É–ø–∞—Å—Ç—å, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ 200 OK.
          # –ü–∞–π–ø | –ø–µ—Ä–µ–¥–∞–µ—Ç –≤—ã–≤–æ–¥ curl –Ω–∞ –≤—Ö–æ–¥ grep.
          # –§–ª–∞–≥ -q (quiet) –¥–ª—è grep –æ–∑–Ω–∞—á–∞–µ—Ç "–Ω–µ –≤—ã–≤–æ–¥–∏ –Ω–∞–π–¥–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É, –ø—Ä–æ—Å—Ç–æ –∑–∞–≤–µ—Ä—à–∏—Å—å —Å –Ω—É–∂–Ω—ã–º –∫–æ–¥–æ–º".
          curl -s --fail "${{ steps.deployment.outputs.page_url }}" | grep -q "Top controls"
